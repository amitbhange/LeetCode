You have a set of integers s, which originally contains all the numbers from 1 to n. Unfortunately, due to some error, 
one of the numbers in s got duplicated to another number in the set, which results in repetition of one number and loss of another number.
You are given an integer array nums representing the data status of this set after the error.
Find the number that occurs twice and the number that is missing and return them in the form of an array.

 

Example 1:

Input: nums = [1,2,2,4]
Output: [2,3]
Example 2:

Input: nums = [1,1]
Output: [1,2]

//this is not my solution but i like thee appoach 
approach : we have to find the element which is duplicate and also want to return the element which is missing in place of that duplicate element.
1) lets make the freq array of length + 1 than the nums array
2) using for each loop we are iterating over the nums array to find if there is duplicate element then freq of that number gets ++
3) later of iterating over the freq array we find which element have freq 2 then return and find which element have freq 0

class Solution {
    public int[] findErrorNums(int[] nums) {
       int freq[] = new int[nums.length+1];
       for(int i : nums){
           freq[i]++;
       }

       int x= 0,y=0;
       for(int i=0;i<freq.length;i++){
           if(freq[i] == 2) x = i;
           if(freq[i] == 0) y = i;
         }
       return new int[]{x,y};
    }
}
